import { useState } from "react";
import { Link, useLocation } from "react-router-dom";
import { motion, AnimatePresence } from "framer-motion";
import { cn } from "@/lib/utils";

const sidebarItems = [
  {
    path: "/dashboard",
    label: "Dashboard",
    icon: (
      <svg
        width="24"
        height="24"
        viewBox="0 0 18 19"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M17.5153 7.72844L10.0153 0.652188C10.0116 0.648989 10.0082 0.645543 10.005 0.641875C9.43281 0.121501 8.55876 0.121501 7.98656 0.641875L7.97625 0.652188L0.484688 7.72844C0.17573 8.01254 -6.38962e-05 8.41309 0 8.83281V17.5C0 18.3284 0.671573 19 1.5 19H6C6.82843 19 7.5 18.3284 7.5 17.5V13H10.5V17.5C10.5 18.3284 11.1716 19 12 19H16.5C17.3284 19 18 18.3284 18 17.5V8.83281C18.0001 8.41309 17.8243 8.01254 17.5153 7.72844ZM16.5 17.5H12V13C12 12.1716 11.3284 11.5 10.5 11.5H7.5C6.67157 11.5 6 12.1716 6 13V17.5H1.5V8.83281L1.51031 8.82344L9 1.75L16.4906 8.82156L16.5009 8.83094L16.5 17.5Z"
          fill="currentColor"
        />
      </svg>
    ),
  },
  {
    path: "/ai-diagnosis",
    label: "AI Diagnosis",
    icon: (
      <svg
        width="24"
        height="24"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M19.5306 18.4694L14.8366 13.7762C17.6629 10.383 17.3204 5.36693 14.0591 2.38935C10.7978 -0.588237 5.77134 -0.474001 2.64867 2.64867C-0.474001 5.77134 -0.588237 10.7978 2.38935 14.0591C5.36693 17.3204 10.383 17.6629 13.7762 14.8366L18.4694 19.5306C18.7624 19.8237 19.2376 19.8237 19.5306 19.5306C19.8237 19.2376 19.8237 18.7624 19.5306 18.4694ZM1.75 8.5C1.75 4.77208 4.77208 1.75 8.5 1.75C12.2279 1.75 15.25 4.77208 15.25 8.5C15.25 12.2279 12.2279 15.25 8.5 15.25C4.77379 15.2459 1.75413 12.2262 1.75 8.5Z"
          fill="currentColor"
        />
      </svg>
    ),
  },
  {
    path: "/forecast",
    label: "Forecast",
    icon: (
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M11.25 3.75V1.5C11.25 1.08579 11.5858 0.75 12 0.75C12.4142 0.75 12.75 1.08579 12.75 1.5V3.75C12.75 4.16421 12.4142 4.5 12 4.5C11.5858 4.5 11.25 4.16421 11.25 3.75ZM12 6C8.68629 6 6 8.68629 6 12C6 15.3137 8.68629 18 12 18C15.3137 18 18 15.3137 18 12C17.9964 8.68779 15.3122 6.00362 12 6ZM5.46938 6.53062C5.76243 6.82368 6.23757 6.82368 6.53062 6.53062C6.82368 6.23757 6.82368 5.76243 6.53062 5.46938L5.03062 3.96937C4.73757 3.67632 4.26243 3.67632 3.96937 3.96937C3.67632 4.26243 3.67632 4.73757 3.96937 5.03062L5.46938 6.53062ZM5.46938 17.4694L3.96937 18.9694C3.7798 19.1589 3.70576 19.4353 3.77515 19.6942C3.84454 19.9532 4.04681 20.1555 4.30578 20.2248C4.56474 20.2942 4.84105 20.2202 5.03062 20.0306L6.53062 18.5306C6.7202 18.3411 6.79424 18.0647 6.72485 17.8058C6.65546 17.5468 6.45319 17.3445 6.19422 17.2752C5.93526 17.2058 5.65895 17.2798 5.46938 17.4694ZM18 6.75C18.199 6.75016 18.3899 6.67124 18.5306 6.53062L20.0306 5.03062C20.2202 4.84105 20.2942 4.56474 20.2248 4.30578C20.1555 4.04681 19.9532 3.84454 19.6942 3.77515C19.4353 3.70576 19.1589 3.7798 18.9694 3.96937L17.4694 5.46938C17.2546 5.68388 17.1903 6.00668 17.3065 6.28709C17.4227 6.5675 17.6965 6.75024 18 6.75ZM18.5306 17.4694C18.2376 17.1763 17.7624 17.1763 17.4694 17.4694C17.1763 17.7624 17.1763 18.2376 17.4694 18.5306L18.9694 20.0306C19.2624 20.3237 19.7376 20.3237 20.0306 20.0306C20.3237 19.7376 20.3237 19.2624 20.0306 18.9694L18.5306 17.4694ZM4.5 12C4.5 11.5858 4.16421 11.25 3.75 11.25H1.5C1.08579 11.25 0.75 11.5858 0.75 12C0.75 12.4142 1.08579 12.75 1.5 12.75H3.75C4.16421 12.75 4.5 12.4142 4.5 12ZM12 19.5C11.5858 19.5 11.25 19.8358 11.25 20.25V22.5C11.25 22.9142 11.5858 23.25 12 23.25C12.4142 23.25 12.75 22.9142 12.75 22.5V20.25C12.75 19.8358 12.4142 19.5 12 19.5ZM22.5 11.25H20.25C19.8358 11.25 19.5 11.5858 19.5 12C19.5 12.4142 19.8358 12.75 20.25 12.75H22.5C22.9142 12.75 23.25 12.4142 23.25 12C23.25 11.5858 22.9142 11.25 22.5 11.25Z"
          fill="currentColor"
        />
      </svg>
    ),
  },
  {
    path: "/community",
    label: "Community",
    icon: (
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M10.9922 10.805C13.0561 9.43099 13.9769 6.86767 13.2592 4.49441C12.5414 2.12114 10.3544 0.497718 7.875 0.497718C5.39558 0.497718 3.20857 2.12114 2.49084 4.49441C1.7731 6.86767 2.69393 9.43099 4.75781 10.805C2.93952 11.4752 1.38666 12.7153 0.330938 14.3403C0.179932 14.5647 0.161484 14.8531 0.28266 15.095C0.403836 15.3368 0.645857 15.4947 0.916031 15.5081C1.18621 15.5215 1.44266 15.3884 1.58719 15.1597C2.97076 13.0317 5.33677 11.7479 7.875 11.7479C10.4132 11.7479 12.7792 13.0317 14.1628 15.1597C14.3917 15.4999 14.8514 15.5932 15.1948 15.3692C15.5382 15.1452 15.6381 14.6869 15.4191 14.3403C14.3633 12.7153 12.8105 11.4752 10.9922 10.805ZM3.75 6.125C3.75 3.84683 5.59683 2 7.875 2C10.1532 2 12 3.84683 12 6.125C12 8.40317 10.1532 10.25 7.875 10.25C5.5979 10.2474 3.75258 8.4021 3.75 6.125ZM23.4506 15.3781C23.1037 15.6043 22.6391 15.5066 22.4128 15.1597C21.0308 13.0303 18.6636 11.7466 16.125 11.75C15.7108 11.75 15.375 11.4142 15.375 11C15.375 10.5858 15.7108 10.25 16.125 10.25C17.7863 10.2484 19.2846 9.25041 19.9261 7.71798C20.5677 6.18554 20.2273 4.4178 19.0626 3.23312C17.898 2.04844 16.1363 1.67805 14.5931 2.29344C14.3427 2.40171 14.0531 2.36541 13.8372 2.19864C13.6212 2.03188 13.5128 1.76096 13.5542 1.49125C13.5956 1.22154 13.7802 0.995581 14.0363 0.90125C16.7109 -0.165433 19.7592 0.960007 21.099 3.50883C22.4388 6.05765 21.6374 9.2067 19.2422 10.805C21.0605 11.4752 22.6133 12.7153 23.6691 14.3403C23.8953 14.6872 23.7975 15.1518 23.4506 15.3781Z"
          fill="currentColor"
        />
      </svg>
    ),
  },
  {
    path: "/history",
    label: "History",
    icon: (
      <svg
        width="24"
        height="24"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M10 0.25C4.61522 0.25 0.25 4.61522 0.25 10C0.25 15.3848 4.61522 19.75 10 19.75C15.3848 19.75 19.75 15.3848 19.75 10C19.7443 4.61758 15.3824 0.255684 10 0.25ZM10 18.25C5.44365 18.25 1.75 14.5563 1.75 10C1.75 5.44365 5.44365 1.75 10 1.75C14.5563 1.75 18.25 5.44365 18.25 10C18.2448 14.5542 14.5542 18.2448 10 18.25ZM16 10C16 10.4142 15.6642 10.75 15.25 10.75H10C9.58579 10.75 9.25 10.4142 9.25 10V4.75C9.25 4.33579 9.58579 4 10 4C10.4142 4 10.75 4.33579 10.75 4.75V9.25H15.25C15.6642 9.25 16 9.58579 16 10Z"
          fill="currentColor"
        />
      </svg>
    ),
  },
  {
    path: "/analytics",
    label: "Analytics",
    icon: (
      <svg
        width="24"
        height="24"
        viewBox="0 0 20 21"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M18.25 2.75H10.75V1.25C10.75 0.835786 10.4142 0.5 10 0.5C9.58579 0.5 9.25 0.835786 9.25 1.25V2.75H1.75C0.921573 2.75 0.25 3.42157 0.25 4.25V15.5C0.25 16.3284 0.921573 17 1.75 17H5.44L3.41406 19.5312C3.15518 19.8549 3.20765 20.3271 3.53125 20.5859C3.85485 20.8448 4.32705 20.7924 4.58594 20.4688L7.36 17H12.64L15.4141 20.4688C15.6729 20.7924 16.1451 20.8448 16.4688 20.5859C16.7924 20.3271 16.8448 19.8549 16.5859 19.5312L14.56 17H18.25C19.0784 17 19.75 16.3284 19.75 15.5V4.25C19.75 3.42157 19.0784 2.75 18.25 2.75ZM7.75 12.5C7.75 12.9142 7.41421 13.25 7 13.25C6.58579 13.25 6.25 12.9142 6.25 12.5V10.25C6.25 9.83579 6.58579 9.5 7 9.5C7.41421 9.5 7.75 9.83579 7.75 10.25V12.5ZM10.75 12.5C10.75 12.9142 10.4142 13.25 10 13.25C9.58579 13.25 9.25 12.9142 9.25 12.5V8.75C9.25 8.33579 9.58579 8 10 8C10.4142 8 10.75 8.33579 10.75 8.75V12.5ZM13.75 12.5C13.75 12.9142 13.4142 13.25 13 13.25C12.5858 13.25 12.25 12.9142 12.25 12.5V7.25C12.25 6.83579 12.5858 6.5 13 6.5C13.4142 6.5 13.75 6.83579 13.75 7.25V12.5Z"
          fill="currentColor"
        />
      </svg>
    ),
  },
  {
    path: "/chatbot",
    label: "Chatbot",
    icon: (
      <svg
        width="24"
        height="24"
        viewBox="0 0 20 21"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M16.75 4.5H10.75V1.5C10.75 1.08579 10.4142 0.75 10 0.75C9.58579 0.75 9.25 1.08579 9.25 1.5V4.5H3.25C1.59315 4.5 0.25 5.84315 0.25 7.5V18C0.25 19.6569 1.59315 21 3.25 21H16.75C18.4069 21 19.75 19.6569 19.75 18V7.5C19.75 5.84315 18.4069 4.5 16.75 4.5ZM14.125 9C14.7463 9 15.25 9.50368 15.25 10.125C15.25 10.7463 14.7463 11.25 14.125 11.25C13.5037 11.25 13 10.7463 13 10.125C13 9.50368 13.5037 9 14.125 9ZM7 17.25H5.5C4.67157 17.25 4 16.5784 4 15.75C4 14.9216 4.67157 14.25 5.5 14.25H7V17.25ZM5.875 11.25C5.25368 11.25 4.75 10.7463 4.75 10.125C4.75 9.50368 5.25368 9 5.875 9C6.49632 9 7 9.50368 7 10.125C7 10.7463 6.49632 11.25 5.875 11.25ZM11.5 17.25H8.5V14.25H11.5V17.25ZM14.5 17.25H13V14.25H14.5C15.3284 14.25 16 14.9216 16 15.75C16 16.5784 15.3284 17.25 14.5 17.25Z"
          fill="currentColor"
        />
      </svg>
    ),
  },
];

export default function Sidebar() {
  const location = useLocation();
  const [isCollapsed, setIsCollapsed] = useState(false);

  const toggleSidebar = () => {
    setIsCollapsed(!isCollapsed);
  };

  return (
    <motion.aside
      className="bg-white border-r border-agro-border min-h-screen p-6 relative"
      animate={{ width: isCollapsed ? 80 : 320 }}
      transition={{ duration: 0.3, ease: "easeInOut" }}
    >
      {/* Toggle Button */}
      <motion.button
        onClick={toggleSidebar}
        className="absolute -right-3 top-1/2 -translate-y-1/2 w-6 h-6 bg-white border border-agro-border rounded-full flex items-center justify-center hover:bg-agro-secondary z-10 shadow-sm"
        aria-label={isCollapsed ? "Expand sidebar" : "Collapse sidebar"}
        whileHover={{ scale: 1.1 }}
        whileTap={{ scale: 0.95 }}
        transition={{ duration: 0.2 }}
      >
        <motion.svg
          width="12"
          height="12"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          animate={{ rotate: isCollapsed ? 180 : 0 }}
          transition={{ duration: 0.3 }}
        >
          <path
            d="M15 18L9 12L15 6"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </motion.svg>
      </motion.button>

      <div className="flex flex-col h-full">
        {/* Logo */}
        <motion.div
          className="flex items-center mb-8"
          layout
          transition={{ duration: 0.3 }}
        >
          <motion.div className="flex flex-shrink-0">
            <svg
              width="16"
              height="16"
              viewBox="0 0 12 10"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M2.6087 8.1912C3.57343 7.96087 4.74147 7.8261 6 7.8261C7.25853 7.8261 8.42657 7.96087 9.3913 8.1912C10.3048 8.40927 11.3322 8.9223 11.7854 9.2784L6.28287 0.45363C6.15237 0.244343 5.84763 0.244343 5.71713 0.45363L0.21458 9.2784C0.66777 8.9223 1.6952 8.40927 2.6087 8.1912Z"
                fill="#0D1A12"
              />
            </svg>
            <svg
              width="16"
              height="16"
              viewBox="0 0 14 14"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M12.3327 10.9213C12.3315 10.9154 12.3292 10.9052 12.3249 10.8902C12.3145 10.8534 12.2983 10.8086 12.2782 10.7608C12.2723 10.7468 12.2663 10.7331 12.2604 10.7201C11.8368 10.4296 10.9929 10.0202 10.2365 9.83963C9.32917 9.62303 8.21377 9.49277 7 9.49277C5.78623 9.49277 4.67083 9.62303 3.7635 9.83963C3.0004 10.0218 2.14835 10.4368 1.72846 10.7277C1.72461 10.7358 1.72072 10.7443 1.71684 10.7531C1.69973 10.7917 1.68574 10.8295 1.67659 10.863C1.66785 10.8949 1.6668 10.9111 1.66668 10.9129C1.66667 10.9131 1.66668 10.913 1.66668 10.9129C1.66668 10.9214 1.67013 11.0256 1.89495 11.2105C2.11515 11.3915 2.47407 11.5844 2.97637 11.7591C3.97473 12.1063 5.3973 12.3333 7 12.3333C8.6027 12.3333 10.0253 12.1063 11.0236 11.7591C11.5259 11.5844 11.8848 11.3915 12.105 11.2105C12.3002 11.05 12.3286 10.9504 12.3327 10.9213ZM0.650593 9.92293L6.15143 1.10089C6.54293 0.473033 7.45707 0.47303 7.84857 1.10089L13.3511 9.92567C13.357 9.93507 13.3626 9.9446 13.368 9.9543L12.7854 10.2784C13.368 9.9543 13.3679 9.9542 13.368 9.9543L13.3684 9.955L13.3688 9.95583L13.37 9.95797L13.3733 9.96393C13.3759 9.96867 13.3792 9.97487 13.3832 9.98243C13.3913 9.9975 13.4021 10.0182 13.4147 10.0433C13.4397 10.0931 13.4732 10.163 13.5072 10.2439C13.5634 10.3774 13.6667 10.6437 13.6667 10.913C13.6667 11.4809 13.3343 11.9258 12.9519 12.2403C12.5649 12.5586 12.0451 12.8155 11.4617 13.0184C10.2885 13.4265 8.711 13.6667 7 13.6667C5.289 13.6667 3.71153 13.4265 2.53833 13.0184C1.95488 12.8155 1.4351 12.5586 1.04806 12.2403C0.66565 11.9258 0.33333 11.4809 0.33333 10.913C0.33333 10.6242 0.43088 10.3641 0.497737 10.2131C0.534583 10.1299 0.57116 10.0601 0.598957 10.0104C0.612993 9.9852 0.625157 9.9645 0.6345 9.94903C0.63918 9.94127 0.64318 9.93477 0.646387 9.92963L0.648873 9.92567L0.650593 9.92293ZM10.9956 8.668L7 2.25999L3.00437 8.668C3.15537 8.6203 3.30597 8.57807 3.4539 8.54273C4.47603 8.2987 5.6967 8.15943 7 8.15943C8.3033 8.15943 9.52397 8.2987 10.5461 8.54273C10.694 8.57807 10.8446 8.6203 10.9956 8.668Z"
                fill="#0D1A12"
              />
            </svg>
          </motion.div>
          <AnimatePresence>
            {!isCollapsed && (
              <motion.h1
                className="text-lg font-bold text-agro-text-secondary ml-4"
                initial={{ opacity: 0, width: 0 }}
                animate={{ opacity: 1, width: "auto" }}
                exit={{ opacity: 0, width: 0 }}
                transition={{ duration: 0.3 }}
              >
                AgroSaarthi
              </motion.h1>
            )}
          </AnimatePresence>
        </motion.div>

        {/* Navigation */}
        <motion.nav className="flex flex-col gap-2">
          {sidebarItems.map((item, index) => {
            const isActive = location.pathname === item.path;
            return (
              <motion.div
                key={item.path}
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ delay: index * 0.05, duration: 0.3 }}
              >
                <Link
                  to={item.path}
                  className={cn(
                    "flex items-center gap-3 px-3 py-2 rounded-lg text-agro-text-primary transition-all duration-300 cursor-pointer group",
                    isActive
                      ? "bg-agro-primary-light text-agro-text-primary"
                      : "hover:bg-agro-secondary hover:text-agro-primary",
                    isCollapsed && "justify-center px-2",
                  )}
                  title={isCollapsed ? item.label : undefined}
                >
                  <motion.span
                    className="w-6 h-6 flex items-center justify-center flex-shrink-0"
                    whileHover={{ scale: 1.1, rotate: 5 }}
                    transition={{ duration: 0.2 }}
                  >
                    {item.icon}
                  </motion.span>
                  <AnimatePresence>
                    {!isCollapsed && (
                      <motion.span
                        className="text-sm font-medium group-hover:translate-x-1 transition-transform duration-200"
                        initial={{ opacity: 0, width: 0 }}
                        animate={{ opacity: 1, width: "auto" }}
                        exit={{ opacity: 0, width: 0 }}
                        transition={{ duration: 0.3 }}
                      >
                        {item.label}
                      </motion.span>
                    )}
                  </AnimatePresence>
                </Link>
              </motion.div>
            );
          })}
        </motion.nav>
      </div>
    </motion.aside>
  );
}
